// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSerwisRowerowy;

namespace WebSerwisRowerowy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220703111145_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WebSerwisRowerowy.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Firma")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KodPocztowy")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Miasto")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NIP")
                        .HasColumnType("char(10)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NrTelefonu")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.MetodPlatnosci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MetodPlatnosci");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataZakonczenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NrTelefonu")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pesel")
                        .HasColumnType("char(11)");

                    b.HasKey("Id");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Statusy");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("CenaNetto")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("PodatekVAT")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Uslugi");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.UslugaZlecenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<int>("UslugiID")
                        .HasColumnType("int");

                    b.Property<int>("ZlecenieID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UslugiID");

                    b.HasIndex("ZlecenieID");

                    b.ToTable("UslugiUzyte");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Zlecenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("CenaBrutto")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime?>("DataOdbioru")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlientID")
                        .HasColumnType("int");

                    b.Property<int?>("MetodPlatnosciID")
                        .HasColumnType("int");

                    b.Property<string>("NazwaRoweru")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PracownikID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlientID");

                    b.HasIndex("MetodPlatnosciID");

                    b.HasIndex("PracownikID");

                    b.HasIndex("StatusID");

                    b.ToTable("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.User", b =>
                {
                    b.HasOne("WebSerwisRowerowy.Models.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.UslugaZlecenie", b =>
                {
                    b.HasOne("WebSerwisRowerowy.Models.Usluga", "Uslugi")
                        .WithMany("UslugiZlecenia")
                        .HasForeignKey("UslugiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSerwisRowerowy.Models.Zlecenie", "Zlecenia")
                        .WithMany("UslugiUzyte")
                        .HasForeignKey("ZlecenieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uslugi");

                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Zlecenie", b =>
                {
                    b.HasOne("WebSerwisRowerowy.Models.Klient", "Klienci")
                        .WithMany("Zlecenia")
                        .HasForeignKey("KlientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSerwisRowerowy.Models.MetodPlatnosci", "MetodPlatnosci")
                        .WithMany("Zlecenia")
                        .HasForeignKey("MetodPlatnosciID");

                    b.HasOne("WebSerwisRowerowy.Models.Pracownik", "Pracownicy")
                        .WithMany("Zlecenia")
                        .HasForeignKey("PracownikID");

                    b.HasOne("WebSerwisRowerowy.Models.Status", "Statusy")
                        .WithMany("Zlecenia")
                        .HasForeignKey("StatusID");

                    b.Navigation("Klienci");

                    b.Navigation("MetodPlatnosci");

                    b.Navigation("Pracownicy");

                    b.Navigation("Statusy");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Klient", b =>
                {
                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.MetodPlatnosci", b =>
                {
                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Pracownik", b =>
                {
                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Status", b =>
                {
                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Usluga", b =>
                {
                    b.Navigation("UslugiZlecenia");
                });

            modelBuilder.Entity("WebSerwisRowerowy.Models.Zlecenie", b =>
                {
                    b.Navigation("UslugiUzyte");
                });
#pragma warning restore 612, 618
        }
    }
}
